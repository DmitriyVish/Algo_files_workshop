"""Задача 1: Простое чтение и запись (TXT)
Напиши программу-«дневник». Она должна спрашивать у пользователя
как у него прошел день, и записывать его ответ в файл [название файла].txt.
Каждая новая запись должна добавляться с новой строки с указанием даты и времени.
"""

import os 
from datetime import datetime 
from time import sleep

"""База данных сгенерирована YaGPT+Алиса. Из путешествия Алисы."""
Neuro_Alice_travel_diary = [
    "Сегодня я впервые увидела Байкал. Его вода настолько чистая, что кажется, будто можно увидеть дно на глубине 40 метров!",
    "Познакомилась с местными нерпами — они такие милые и любопытные! Они подплывали совсем близко к лодке",
    "Прогулялась по Кругобайкальской железной дороге. Потрясающие виды на озеро с мостов и тоннелей",
    "Попробовала омуль горячего копчения — это просто взрыв вкуса! Теперь понимаю, почему его так любят местные",
    "Наблюдала за закатом на Ольхоне. Небо окрасилось в невероятные оттенки розового и оранжевого",
    "Изучила историю шаманских мест. Узнала много интересного о культуре и верованиях местных жителей",
    "Покаталась на катере по Байкалу. Ветер в лицо и брызги воды — незабываемые ощущения!",
    "Нашла красивый песчаный пляж с белым песком. Здесь так спокойно и умиротворённо",
    "Встретила группу туристов, которые рассказали мне о секретных тропах вокруг озера",
    "Попробовала бурятские позы — это просто кулинарное открытие! Сочная начинка и тонкое тесто",
    "Исследовала пещеры на побережье. Внутри так прохладно и таинственно",
    "Увидела, как местные рыбаки ставят сети. Их опыт и знания поражают",
    "Побывала на термальных источниках. После долгого дня на холоде — это настоящее блаженство",
    "Заметила редкую птицу — чёрного журавля. Он так грациозно парил над водой",
    "Познакомилась с местным художником, который рисует пейзажи Байкала. Его работы просто завораживают",
    "Прошла по экотропе вдоль берега. Виды открываются невероятные на каждом шагу",
    "Попробовала себя в роли фотографа — сделала множество потрясающих снимков озера",
    "Пообщалась с местными старожилами, которые поделились историями о Байкале",
    "Нашла уединённую бухту, где можно было побыть наедине с природой",
    "Завершаю день, любуясь звёздным небом над Байкалом — оно здесь особенно яркое и чистое"
]

class Diary():
    """Класс Diary Создает строковую запись 
    с указанием даты и времени"""
    def __init__(self, text):
        self.text = text 
     
    @staticmethod    
    def get_month(month: int) -> str:
        """Метод преобразует номер месяца в строчную запись"""
        months = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 
                'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря']
        for _ in range(len(months) + 1):
            return months[month - 1]
        
    @staticmethod
    def get_day_of_week(day: int) -> str:
        """Метод возвращает строковое название дня недели"""
        days = ['Понедельник', 'Вторник', 'Среда', 
           'Четверг', 'Пятница', 'Суббота', 'Воскресенье']
        for _ in range(len(days)):
            return days[day]
        
    def get_date_time(self):
        """Метод возвращает строку с текущим
        днем недели, датой и временем"""
        date = str(datetime.now().day) + " " + str(self.get_month(datetime.now().month)) + " " + str(datetime.now().year)
        time = str(datetime.now().hour) + ":" + str(datetime.now().minute) + ":" + str(datetime.now().second)
        weekday = str(self.get_day_of_week(datetime.now().weekday()))
        return f"Сегодня {weekday} {date} года, Время: {time}"
        
    def get_note(self):
        return f"{self.get_date_time()} : {self.text}\n"
    
def write_note(mode: str="w+"):
    """Функция для записи в текстовый файл"""
    with open("diary.txt", mode=mode, encoding="utf-8") as file:    
        for note in Neuro_Alice_travel_diary:
            text = Diary(note).get_note() # text = Diary(input("Как прошёл Ваш день?: "))
            if not text:
                print("Вы ничего не ввели!")
            else:
                try:
                    file.write(text) 
                    print("Запись успешно добавлена!")
                    sleep(2)
                except IOError as e:
                    print(f"Ошибка при записи в файл: {e}")  
    
# Считывание и запись в файл
if not os.path.exists("diary.txt"):
    write_note() 
else:
    write_note("a")
    

# Чтение файла для проверки
if not os.path.exists("diary.txt"):
    print("Файла не существует!")
else:
    with open("diary.txt", "r", encoding="utf-8") as file:
        for line in file:
            print(line)

                
       